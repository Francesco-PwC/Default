[{"id":"146f999b.f0f316","type":"tab","label":"Machine","disabled":false,"info":""},{"id":"9a776e1b.61326","type":"json","z":"146f999b.f0f316","name":"","property":"payload","action":"","pretty":false,"x":470,"y":260,"wires":[["8a8f8cb6.6728","e5240838.ace318"]]},{"id":"e69f13d4.ed23c","type":"ui_template","z":"146f999b.f0f316","group":"3c7c4668.b7d8ca","name":"Import chart.js","order":3,"width":0,"height":0,"format":"<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-annotation/0.5.7/chartjs-plugin-annotation.js\"></script>\n\n<link rel=\"stylesheet\" href=\"https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.3.0/css/ol.css\" type=\"text/css\">\n<script src=\"https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.3.0/build/ol.js\"></script>\n<script src=\"https://cdn.maptiler.com/ol-mapbox-style/v5.0.2/olms.js\"></script>\n\n<script src=\"https://kit.fontawesome.com/f0ee7ed24b.js\" crossorigin=\"anonymous\"></script>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"global","x":1220,"y":260,"wires":[["28c8e2b8.dc62de","c80a9c63.8f6be"]]},{"id":"3553b494.429a6c","type":"function","z":"146f999b.f0f316","name":"Parser messaggio","func":"let data = msg.payload;\nvar cont = context;\nconsole.log(cont);\nvar t;\nvar sv;\nvar ts;\nvar type, value, priority, role, min_threshold, max_threshold;\nfor (var i = 0; i < data.length; i++){\n    for (var h= 0; h < data[i].SIGNALS.length;h++){\n        t = data[i].SIGNALS[h].TYPE;\n        sv = data[i].SIGNALS[h].VALUE;\n        ts = data[i].SIGNALS[h].SIGNAL_TIMESTAMP;\n        if (data[i].SIGNALS[h].MIN_THRESHOLD != \"NULL\" && data[i].SIGNALS[h].MAX_THRESHOLD != \"NULL\"){\n            min_threshold = data[i].SIGNALS[h].MIN_THRESHOLD;\n            max_threshold = data[i].SIGNALS[h].MAX_THRESHOLD;\n            node.send({\n                timestamp: ts,\n                sensor_value: sv,\n                min: min_threshold,\n                max: max_threshold,\n                topic: t\n            });\n        } else {\n            node.send({\n                timestamp: ts,\n                sensor_value: sv,\n                topic: t\n            });\n        }\n    }\n    if (data[i].NOTIFICATIONS.length > 0){\n        for (var j = 0; j < data[i].NOTIFICATIONS.length;j++){\n            type = data[i].NOTIFICATIONS[j].TYPE;\n            value = data[i].NOTIFICATIONS[j].VALUE;\n            priority = data[i].NOTIFICATIONS[j].PRIORITY;\n            role = data[i].NOTIFICATIONS[j].ROLE;\n            node.send(\n                {\n                    notif_info:[{\n                        notify_value: value,\n                        notify_type: type,\n                        notify_priority: priority,\n                        notfiy_role: role\n                    }],\n                    topic: \"notification\"\n                }\n            )\n        }\n    }\n}\n\n","outputs":1,"noerr":0,"x":850,"y":260,"wires":[["c793be19.83028","400b0766.7e5968","b6d9eacf.be46f8"]]},{"id":"204614f0.60576c","type":"websocket in","z":"146f999b.f0f316","name":"","server":"50dca986.3dcf68","client":"","x":150,"y":180,"wires":[["9a776e1b.61326","21647a8c.c6f866"]]},{"id":"65530a05.48cd74","type":"ui_template","z":"146f999b.f0f316","d":true,"group":"7179332e.2c6aec","name":"Gestore_grafici_macchine_v1","order":0,"width":"6","height":"7","format":"<style>{{msg.style}}</style>\n\n    <div id=\"containerMachine\">\n        <canvas id=\"machineChart\"></canvas>\n    </div>\n    <div id=\"containerCounterMachine\">\n        <a>Counter: <p id=\"counterMachine\"></p></a>\n    </div>\n    <div id=\"containerTempMachine\">\n        <canvas id=\"tempChart\"></canvas>\n    </div>\n    <script>\n    \n    //GRAFICI ---------------------\n    \nvar myChart;\nvar ctx = document.getElementById('machineChart');\nmyChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Round per Minute',\n             data: [0],\n            backgroundColor: [\n                'rgba(19, 19, 19, 0.1)'\n            ],\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n\nvar myChart_2;\nvar ctx_2 = document.getElementById('tempChart');\nmyChart_2 = new Chart(ctx_2, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Temperature',\n            data: [0,1],\n            backgroundColor: [\n                'rgba(19, 19, 19, 0.1)'\n            ],\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 2\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n\nvar myChart_HEART;\nvar c_HEART = document.getElementById('heartChart');\nmyChart_HEART = new Chart(c_HEART, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Bps',\n             data: [0],\n            backgroundColor: [\n                'rgba(19, 19, 19, 0.1)'\n            ],\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n\nvar myChart_ALTITUDE;\nvar c_ALT = document.getElementById('altitudeChart');\nmyChart_ALTITUDE = new Chart(c_ALT, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Altitude',\n            data: [0,1],\n            backgroundColor: [\n                'rgba(19, 19, 19, 0.1)'\n            ],\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 2\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n    //GRAFICI -----------------\\\\\\\\\\\nvar count_mac = 0;\nvar count_round = 0;\nvar count_heart = 0;\nvar count_alt = 0;\nvar text;\n(function(scope) {\n\ttext = document.getElementById(\"counterMachine\");\n        scope.$watch('msg', function(msg, data) {\n            var t = msg.timestamp;\n            var time = t.substring(11,13);\n            var minutes = t.substring(15,17);\n            switch(msg.topic){\n                case \"roundPerMinute\":\n                    roundPerMinuteRoutine(time,msg.sensor_value);\n                    break;\n                case \"piecesCount\":\n                \tpiecesCountRoutine(msg.sensor_value);\n                \tbreak;\n                case \"machineTemperature\":\n                \tmachineTempRoutine(time,msg.sensor_value);\n                \tbreak;\n                case \"Altitude\":\n                    altitudeRoutine(t,msg.sensor_value);\n                    break;\n            }\n        })\n    })(scope);\n    \nfunction addData(chart, label, dat, index) {\n    chart.data.labels.push(label);\n    if (count_mac > 10 || count_round > 10){\n        removeData(chart);\n    }\n    chart.data.datasets.forEach((dataset) => {\n        dataset.data.push(dat);\n    });\n    chart.update();\n}\n\nfunction removeData(chart){\n    chart.data.labels.shift();\n    chart.data.datasets.forEach((dataset) => {\n        dataset.data.shift();\n        });\n    chart.update();\n}\n\nfunction removeSingleData(chart) {\n    chart.data.labels.shift();\n    chart.update();\n}\n\nfunction piecesCountRoutine(value){\n    var val = value;\n    text.innerHTML = val;\n}\n\nfunction roundPerMinuteRoutine(times, value){\n\taddData(myChart,times,value, count_round++);\n}\n\nfunction machineTempRoutine(times, value){\n    addData(myChart_2,times,value,count_mac++);\n}\n\nfunction altitudeRoutine(times, value){\n\taddData(myChart_HEART,times,value, count_alt++);\n}\n\n\n    </script>\n","storeOutMessages":false,"fwdInMessages":true,"templateScope":"local","x":1430,"y":60,"wires":[[]]},{"id":"c793be19.83028","type":"template","z":"146f999b.f0f316","name":"Stile css","field":"style","fieldType":"msg","format":"handlebars","syntax":"mustache","template":".type{\n    padding-left: 5%;\n    padding-right: 5%;\n}\n\n#tab_log_notif{\n    width:100%;\n}\n\n#containerMachine{\ndisplay: block;\nwidth: 100%;\n}\n\n#containerCounterMachine{\nwidth: 100%;\n}\n\n#counterMachine{\n    display:inline-block;\n}\n\n#containerTempMachine{\nwidth: 100%;\n}\n\n#machineChart{\n  display: block; width: 100%; height: 30%;\n}\n\n#svg{\n\tposition:relative;\n}\n\n#progressbg{\n\tz-index:0;\n\tposition:absolute;\n\ttop:0px;\n\n\tbox-shadow: 5px 5px 5px 5px #333;\n\tstroke: #fbfbfb;\n}\n#progress{\n\tstroke-dashoffset: 125px;\n\tstroke: #7df;\n\ttransition: 1s linear;\n\tz-index:1;\n\tposition:absolute;\n\ttop:0px;\n}\n#value{\n\twidth: 60%;\n\ttext-align: center;\n\tposition: absolute;\n\ttop: 114px;\n    left: 18%;\n\tfont-size: 50px;\n\tfont-weight: 100;\n\tcolor: #aef;\n\ttransition: color 1s linear;\n\n\t/*transform: rotate(90deg);*/\n}\n#svgcontainer{\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: -22%;\n    transform: scale(0.5);\n}\n\n#map {position: absolute; top: 0; right: 0; bottom: 0; left: 0;}\n\n\n\n#containerCounter, #containerRPM, #containerTemperature{\n    width: 6.4vw;\n    float: left;\n    height: 5.7rem;\n    background: #191919;\n    border-radius: 17px;\n    text-align: center;\n    position: relative;\n    box-shadow: 0 0 5px rgba(0,212,255,0.2), 0 0 3px rgba(0,212,255,0.2), 0 0 1px rgba(0,212,255,0.2), 0 0 10px rgba(121,9,115,0.1), 0 0 21px rgba(121,9,115,0.1);\n}\n\n#containerHsv{\n    position: relative;\n    width: 100%;\n    right: 0;\n    text-align: center;\n}\n#containerHeartBeat{\n    width: 45%;\n    height: 5.7rem;\n    background: #191919;\n    border-radius: 17px;\n    text-align: center;\n    box-shadow: 0 0 5px rgba(0,212,255,0.2), 0 0 3px rgba(0,212,255,0.2), 0 0 1px rgba(0,212,255,0.2), 0 0 10px rgba(121,9,115,0.1), 0 0 21px rgba(121,9,115,0.1);\n}\n#containerSound{\n    width: 45%;\n    height: 5.7rem;\n    background: #191919;\n    border-radius: 17px;\n    text-align: center;\n    box-shadow: 0 0 5px rgba(0,212,255,0.2), 0 0 3px rgba(0,212,255,0.2), 0 0 1px rgba(0,212,255,0.2), 0 0 10px rgba(121,9,115,0.1), 0 0 21px rgba(121,9,115,0.1);\n}\n#soundText, #heartText, #counterMachine, #rpmText, #tempText{\n    font-size: 2.5rem;\n    width: 100%;\n    margin-top: 8%;\n    background: transparent !important;\n    display: inline;\n    margin: 0;\n    text-align: left;\n}\n#container_s_data{\n    display: flex;\n    justify-content: space-between;\n    padding-left: 5%;\n    padding-right: 5%;\n    margin-bottom: 5%;\n    margin-top: 5%;\n}\n#container_s_data_mach{\n    display: flex;\n    justify-content: space-between;\n    padding-left: 5%;\n    padding-right: 5%;\n    margin-bottom: 5%;\n    margin-top: 2%;\n}\n.db_text, .bps_text{\n    position: relative;\n    display: inline;\n    width: 100%;\n    margin-top: 26%;\n}\n\n\n","output":"str","x":1040,"y":260,"wires":[["e69f13d4.ed23c"]]},{"id":"faf2ee41.8b529","type":"ui_template","z":"146f999b.f0f316","group":"7179332e.2c6aec","name":"Gestore_grafici_macchine","order":0,"width":"9","height":"13","format":"<style>{{msg.style}}</style>\n<div id=\"containerRPMtit\" style=\"display:flex;margin-bottom: 2%;\">\n    <i class=\"fa fa-tachometer\" style=\"font-size:30px;color:#E5E5E5;margin-bottom: 2%\"></i>\n    <p style=\"display:inline;margin-left:3%\">RPM</p>\n</div>\n<div id=\"containerMachine\">\n    <canvas id=\"machineChart\"></canvas>\n</div>\n<div id=\"container_s_data_mach\">\n    <div id=\"containerCounter\">\n        <div id=\"containerCounterVal\" style=\"width: 100%;position: relative;display: flex;z-index: 10;\">\n            <i class=\"fa fa-industry\" style=\"font-size:30px;color:lightblue;margin-right: 2%;width: 75%;text-align: right;margin-top: 6%;\"></i>\n            <p id=\"counterMachine\">0</p>\n            <a class=\"counter_text\" style=\"position: absolute;display: inline;width: 100%;margin-top: 36%;\">PIECES COUNTER</a>\n        </div>\n    </div>\n    <div id=\"containerRPM\">\n        <div id=\"containerRPMVal\" style=\"width: 100%;position: relative;display: flex;z-index: 10;\">\n            <i class=\"fa fa-tachometer\" style=\"font-size:30px;color:#E5E5E5;margin-right: 2%;width: 75%;text-align: right;margin-top: 6%;\"></i>\n            <p id=\"rpmText\">0</p>\n            <a class=\"rpm_text\" style=\"position: absolute;display: inline;width: 100%;margin-top: 36%;\">RPM</a>\n        </div>\n    </div>\n    <div id=\"containerTemperature\">\n        <div id=\"containerTempVal\" style=\"width: 100%;position: relative;display: flex;z-index: 10;\">\n            <i class=\"fa fa-temperature-high\" style=\"font-size:30px;color:#009C41;margin-right: 2%;width: 75%;text-align: right;margin-top: 6%;\"></i>\n            <p id=\"tempText\">0</p>\n            <a class=\"temp_text\" style=\"position: absolute;display: inline;width: 100%;margin-top: 36%;\">°C</a>\n        </div>\n    </div>\n</div>\n<div id=\"containerTempMachineTit\" style=\"display:flex;margin-bottom: 2%;\">\n    <i class=\"fa fa-temperature-high\" style=\"font-size:30px;color:#009C41;margin-bottom: 2%\"></i>\n    <p style=\"display:inline;margin-left:3%\">TEMPERATURE (°C)</p>\n</div>\n    <div id=\"containerTempMachine\">\n        <canvas id=\"tempChart\"></canvas>\n    </div>\n    \n    <script>\n    \n//GRAFICI ---------------------\n/*    \nvar myChart;\nvar ctx = document.getElementById('machineChart');\ncont = ctx.getContext(\"2d\");\nvar gradient_RPM = cont.createLinearGradient(0, 0, 0, 500);\ngradient_RPM.addColorStop(0, \"rgba(0,212,255,0.1)\");   \ngradient_RPM.addColorStop(0.63, \"rgba(121,9,115,0.1)\");\ngradient_RPM.addColorStop(1, \"rgba(19,19,19,0.1)\");\n\nmyChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Round per Minute',\n            data: [0],\n            backgroundColor: gradient_RPM,\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 1,\n            pointBackgroundColor: function(ctx) {\n                var index = ctx.dataIndex;\n                var value = ctx.dataset.data[index];\n                var data_length = ctx.dataset.data.length - 1;\n                return index < data_length - 1 ? 'transparent' : 'green';\n                //return index === 0 ? 'red' : 'green';\n            }\n        }]\n    },\n    options: {\n        scales: {\n            xAxes: [{\n                ticks: {\n                    max: 10,\n                    min: 0,\n                    stepSize: 1\n                }\n            }],\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        },\n        legend: {\n            display: false\n        },\n        tooltips: {\n\t\t\tmode: \"index\"\n\t\t},\n\t\thover: {\n\t\t\tmode: \"index\"\n\t\t},\n        annotation: {\n              annotations: \n              [{\n                type: 'line',\n                mode: 'horizontal',\n                scaleID: 'y-axis-0',\n                value: 500,\n                borderColor: 'rgb(255, 255, 255)',\n                borderWidth: 2,\n                label: \n                {\n                  enabled: true,\n                  content: 'min'\n                }\n              },\n              {\n                type: 'line',\n                mode: 'horizontal',\n                scaleID: 'y-axis-0',\n                value: 1000,\n                borderColor: 'rgb(255, 0, 0)',\n                borderWidth: 2,\n                label: \n                {\n                  enabled: true,\n                  content: 'max'\n                }\n              }]\n        }\n    }\n});\n\nvar myChart_2;\nvar ctx_2 = document.getElementById('tempChart');\n\nmyChart_2 = new Chart(ctx_2, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Temperature',\n            data: [0],\n            backgroundColor: gradient_RPM,\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 2\n        }]\n    },\n    options: {\n        scales: {\n            xAxes: [{\n                ticks: {\n                    max: 10,\n                    min: 0,\n                    stepSize: 1\n                }\n            }],\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        },\n        legend: {\n            display: false\n        }\n    }\n});\n*/\n/*\n//To manage different colors\nvar pointBackgroundColors = [\"transparent\"];\n\nvar myChart_HEART;\nvar ctx_H = document.getElementById('heartChart');\n\ncont_HE = ctx_H.getContext(\"2d\");\nvar gradientHE = cont_HE.createLinearGradient(0, 0, 0, 500);\ngradientHE.addColorStop(0, \"rgba(0,212,255,0.1)\");   \ngradientHE.addColorStop(0.53, \"rgba(121,9,115,0.1)\");\ngradientHE.addColorStop(1, \"rgba(19,19,19,0.1)\");\n\nmyChart_HEART = new Chart(ctx_H, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Bps',\n            data: [0],\n            backgroundColor: gradientHE,\n            borderColor: [\n                'rgba(70,102,255, 0.7)'\n            ],\n            borderWidth: 1,\n            pointBackgroundColor: pointBackgroundColors\n        }]\n    },\n    options: {\n        scales: {\n            xAxes: \n            [{\n                ticks: {\n                    max: 50,\n                    min: 0,\n                    stepSize: 1,\n                }\n            }],\n            yAxes: \n            [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        },\n        legend: {\n            display: false\n        }\n    }\n});\n\nvar myChart_ALT;\nvar ctx_ALT = document.getElementById('altitudeChart');\n\ncont_ALT = ctx_ALT.getContext(\"2d\");\nvar gradient = cont_ALT.createLinearGradient(0, 0, 0, 500);\ngradient.addColorStop(0, \"rgba(0,212,255,0.1)\");   \ngradient.addColorStop(0.63, \"rgba(121,9,115,0.1)\");\ngradient.addColorStop(1, \"rgba(19,19,19,0.1)\");\n\nvar gradientAH = cont_ALT.createLinearGradient(0, 0, 0, 200);\ngradientAH.addColorStop(0, \"rgba(0,212,255,0.5)\");   \ngradientAH.addColorStop(0.53, \"rgba(121,9,115,0.4)\");\ngradientAH.addColorStop(1, \"rgba(19,19,19,0.4)\");\n\nvar gradient_ALT_BORDER = cont_ALT.createLinearGradient(0, 0, 0, 200);\ngradient.addColorStop(0, \"rgba(0,212,255,1)\");   \ngradient.addColorStop(0.63, \"rgba(121,9,115,0.8)\");\ngradient.addColorStop(1, \"rgba(19,19,19,0.6)\");\n\nmyChart_ALT = new Chart(ctx_ALT, {\n    type: 'bar',\n    data: {\n        datasets: [{\n            categoryPercentage: 0.5,\n            barPercentage: 0.5,\n            barThickness: 1,\n            label: 'Altitude',\n            fillColor: gradient,\n            hoverBackgroundColor: gradientAH,\n            borderColor: \"white\",\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            xAxes: [{\n                ticks: {\n                    type: 'category',\n                    max: 20,\n                    min: 15,\n                    stepSize: 1\n                }\n            }],\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        },\n        legend: {\n            display: false\n        }\n    }\n});\n*/\n\n/*\nvar myChart_TEMP;\nvar ctx_TEMP;\nctx_TEMP = document.getElementById('fieldTempChart');\ncont_TEMP = ctx_TEMP.getContext(\"2d\");\nvar gradient_TEMP = cont_TEMP.createLinearGradient(0, 0, 0, 500);\ngradient_TEMP.addColorStop(0, \"rgba(0,212,255,0.1)\");   \ngradient_TEMP.addColorStop(0.63, \"rgba(121,9,115,0.1)\");\ngradient_TEMP.addColorStop(1, \"rgba(19,19,19,0.1)\");\nmyChart_TEMP = new Chart(ctx_TEMP, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: '°C',\n            data: [0],\n            backgroundColor: gradient_TEMP,\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 2\n        }]\n    },\n    options: {\n        scales: {\n            xAxes: [{\n                ticks: {\n                    max: 10,\n                    min: 0,\n                    stepSize: 1\n                }\n            }],\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        },\n        legend: {\n            display: false\n        }\n    }\n});\n\nvar myChart_HUM;\nvar ctx_HUM = document.getElementById('fieldHumChart');\nmyChart_HUM = new Chart(ctx_HUM, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Humidity',\n            data: [0],\n            backgroundColor: [\n                'rgba(19, 19, 19, 0.1)'\n            ],\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 2\n        }]\n    },\n    options: {\n        scales: {\n            xAxes: [{\n                ticks: {\n                    max: 10,\n                    min: 0,\n                    stepSize: 1\n                }\n            }],\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        },\n        legend: {\n            display: false\n        }\n    }\n});\n*/\n    //GRAFICI -----------------\\\\\\\\\\\nvar ScopeX;\n\nvar count_mac = 0;\nvar count_round = 0;\nvar count_heart = 0;\nvar count_alt = 0;\nvar count_temp = 0;\nvar count_hum = 0;\nvar count_row = 0;\n\n//Text vars to be populated with values\nvar text;\nvar text_sound;\nvar text_heart;\nvar text_temp;\nvar text_rpm;\n\nvar notifications;\n//Type of graph to which append data (can be BAR or LINEAR)\nvar type;\n\n//msg - signals threshold\nvar min, max;\n\nvar svg_heart = document.getElementById(\"svg_heart\");\n\n(function(scope) {\n\ttext = document.getElementById(\"counterMachine\");\n\ttext_sound = document.getElementById(\"soundText\");\n\ttext_heart = document.getElementById(\"heartText\");\n\ttext_temp = document.getElementById(\"tempText\");\n\ttext_rpm = document.getElementById(\"rpmText\");\n        scope.$watch('msg', function(msg, data) {\n            scopeX = scope;\n            type = \"\";\n            \n            if (msg.timestamp){\n                var t = msg.timestamp;\n                var time = t.substring(11,13);\n                var minutes = t.substring(15,17);\n            }\n            if (msg.min != null && msg.max != null){\n                min = msg.min;   \n                max = msg.max;\n            }\n            switch(msg.topic){\n                case \"roundPerMinute\":\n                    roundPerMinuteRoutine(time,msg.sensor_value);\n                    break;\n                case \"piecesCount\":\n                \tpiecesCountRoutine(msg.sensor_value);\n                \tbreak;\n                case \"machineTemperature\":\n                \tmachineTempRoutine(time,msg.sensor_value);\n                \tbreak;\n                case \"barometer\":\n                    console.log(\"barometer: \"+msg.sensor_value);\n                    var val = parseInt(msg.sensor_value, 10);\n                    altitudeRoutine(time,val);\n                    break;\n                case \"heartrate\":\n                    heartRoutine(time,msg.sensor_value);\n                \tbreak;\n                case \"decibel\":\n                    soundRoutine(msg.sensor_value, scope);\n                \tbreak;\n                case \"temperature\":\n                    tempRoutine(time,msg.sensor_value);\n                    break;\n                case \"humidity\":\n                    humRoutine(time,msg.sensor_value);\n                    break;\n                case \"flame\":\n                    flameRoutine(time,msg.sensor_value);\n                    break;\n                case \"gas\":\n                    gasRoutine(time,msg.sensor_value);\n                    break;\n                case \"notification\":\n                    populateLoggingTable(msg.notif_info, count_row);\n                    break;\n            }\n        })\n    })(scope);\n    \n\n\nfunction addData(chart, label, d, index, type) {\n    chart.data.labels.push(label);\n    var dat = parseInt(d);\n    if (type != \"altitude\" && index > 10){\n        if (type != \"heartrate\"){\n            removeData(chart, type);\n        } else if (index > 50){\n            removeData(chart, type);\n        }\n    } else if (index > 20){\n        removeData(chart, type);\n    }\n    chart.data.datasets.forEach((dataset) => {\n        dataset.data.push(dat);\n        var input = dataset.data;\n        //debug\n        if (type === \"heartrate\"){\n            console.log(input);\n            console.log(pointBackgroundColors);\n        }\n        \n        if (type === \"altitude\"){\n            dataset.backgroundColor = gradient;\n            dataset.hoverBackgroundColor = \"rgba(0,212,255,0.2)\";\n            dataset.borderColor = (\"transparent\");\n        }\n        if (type === \"heartrate\"){\n            chart.config.data.datasets[0].backgroundColor = gradientHE;\n            //chart.config.data.datasets[0][\"pointBackgroundColor\"] = 'rgba(70,102,255, 1)';\n            console.log(\"dataset: \"+ dataset.data[0].pointBackgroundColor);\n            console.log(\"Heartrate - min: \"+min+\" max: \"+max + \" act: \"+dat);\n            if (dat >= min && dat <= max) {\n                console.log(\"normal value: \"+dat);\n                pointBackgroundColors.push(\"transparent\");\n            }\n            if (dat > max){\n                console.log(dat+ \" > \" +max);\n                //input.pointBackgroundColor = 'red';\n                //chart.config.data.datasets[0].data.radius = '5';\n                pointBackgroundColors.push(\"red\");\n            } \n            if (dat < min) {\n                console.log(dat+ \" < \" +max);\n                pointBackgroundColors.push(\"red\");\n                //chart.config.data.datasets[0]['pointBackgroundColor'][0] = 'green';\n                //chart.config.data.datasets[0].radius = '5';\n                //dataset.pointBackgroundColor = \"green\";\n            }\n        }\n        if (type === \"roundPerMinute\"){\n            console.log(\"RPM - dataset: \"+dataset);\n            console.log(\"RPM - dataset.data: \"+dataset.data);\n            console.log(\"RPM - dasets[0].data: \"+chart.config.data.datasets[0].data);\n            console.log(\"RPM - dataset: \"+dataset[0])\n            //chart.config.data.datasets[0].pointBackgroundColor =\"rgba(255,255,255,1)\";\n        }\n    });\n    chart.update();\n}\n\nfunction removeData(chart, t){\n    chart.data.labels.shift();\n    //var meta = myChart.getDatasetMeta(0);\n    chart.data.datasets.forEach((dataset) => {\n        dataset.data.shift();\n        if (t === \"heartrate\"){\n            pointBackgroundColors.shift();\n        }\n    });\n    chart.update();\n}\n\nfunction removeSingleData(chart) {\n    chart.data.labels.shift();\n    chart.update();\n}\n\nfunction piecesCountRoutine(value){\n    var val = value;\n    //increment(text, val);\n    text.innerHTML = val;\n}\n\nfunction soundRoutine(value, node){\n    var val = value;\n    text_sound.innerHTML = val;\n    node.send({\n        payload: value,\n        topic: \"sound\"\n    });\n}\n\nfunction roundPerMinuteRoutine(times, value){\n    text_rpm.innerHTML = value;\n    type=\"roundPerMinute\";\n\taddData(myChart,times,value, count_round++, type);\n}\n\nfunction machineTempRoutine(times, value){\n    text_temp.innerHTML = value;\n    addData(myChart_2,times,value,count_mac++, type);\n}\n\nfunction heartRoutine(times, value){\n    type=\"heartrate\";\n    text_heart.innerHTML = value;\n    addData(myChart_HEART,times,value,count_heart++, type);\n}\n\nfunction altitudeRoutine(times, value){\n    type=\"altitude\";\n\taddData(myChart_ALT,times,Math.floor(value), count_alt++, type);\n}\n\nfunction tempRoutine(times, value){\n\taddData(myChart_TEMP,times,value, count_temp++, type);\n}\n\nfunction humRoutine(times, value){\n    addData(myChart_HUM,times,value, count_hum++, type);\n}\n\nvar canDelete;\n\nfunction populateLoggingTable(notification,index){\n    var table = document.getElementById(\"tab_log_notif\");\n    var rows_start = document.getElementsByClassName(\"row\");\n\n    var row_length = rows_start.length;\n    var row = rows_start[0];\n    var cell_value = row.cells[2];\n    var cell_type = row.cells[1];\n    var cell_priority = row.cells[0];\n    var cell_length = row.cells.length;\n    \n    \n    for (var j = 0; j < notification.length;j++){\n        shiftTable(table, rows_start);\n        cell_value.innerHTML = notification[j].notify_value;\n        cell_type.innerHTML = notification[j].notify_type;\n        cell_priority.innerHTML = notification[j].notify_priority;\n    }\n    count_row++;\n}\n\nfunction shiftTable(table){\n  var tab = document.getElementById(\"tab_log_notif\");\n  var rows = tab.getElementsByClassName(\"row\");\n  var shifted = rows[0];\n  rows[0].parentNode.removeChild(rows[0]);\n  table.appendChild(shifted);\n}\n\nfunction increment(elem, finalVal) {\n  var curr_val = parseInt(text.innerHTML, 10);\n  if (curr_val < final_val) {\n    curr_val++;\n    text.innerHTML = curr_val;\n    setTimeout(function() {\n      increment(elem, final_val);\n    }, 40)\n  }\n  if (currVal > finalVal){\n    curr_val--;\n    text.innerHTML = curr_val;\n    setTimeout(function() {\n      increment(elem, final_val);\n    }, 40);\n  }\n}\n\n\n</script>\n","storeOutMessages":false,"fwdInMessages":true,"templateScope":"local","x":1710,"y":260,"wires":[["ce070636.abe568","6e1a019e.fabe2","71eeeca5.cac1c4"]]},{"id":"6e922792.be5ef8","type":"websocket in","z":"146f999b.f0f316","name":"","server":"bd602647.ead248","client":"","x":160,"y":240,"wires":[["9a776e1b.61326"]]},{"id":"42db136.6acc2ec","type":"websocket in","z":"146f999b.f0f316","name":"","server":"fb5d3b0e.b7c228","client":"","x":170,"y":300,"wires":[["9a776e1b.61326"]]},{"id":"e11e1cac.5feab","type":"ui_template","z":"146f999b.f0f316","d":true,"group":"7179332e.2c6aec","name":"Gestore_grafici_macchine_v2","order":0,"width":"6","height":"7","format":"<style>{{msg.style}}</style>\n\n    <div id=\"containerMachine\">\n        <canvas id=\"machineChart\"></canvas>\n    </div>\n    <div id=\"containerCounterMachine\">\n        <a>Counter: <p id=\"counterMachine\"></p></a>\n    </div>\n    <div id=\"containerTempMachine\">\n        <canvas id=\"tempChart\"></canvas>\n    </div>\n    <script>\n    \n    //GRAFICI ---------------------\n    \nvar myChart;\nvar ctx = document.getElementById('machineChart');\nmyChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Round per Minute',\n             data: [0],\n            backgroundColor: [\n                'rgba(19, 19, 19, 0.1)'\n            ],\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n\nvar myChart_2;\nvar ctx_2 = document.getElementById('tempChart');\nmyChart_2 = new Chart(ctx_2, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Temperature',\n            data: [0,1],\n            backgroundColor: [\n                'rgba(19, 19, 19, 0.1)'\n            ],\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 2\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n\nvar myChart_HEART;\nvar ctx_H = document.getElementById('heartChart');\nmyChart_HEART = new Chart(ctx_H, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Bps',\n            data: [0],\n            backgroundColor: [\n                'rgba(19, 19, 19, 0.1)'\n            ],\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n\nvar myChart_ALT;\nvar ctx_ALT = document.getElementById('altitudeChart');\nmyChart_ALT = new Chart(ctx_ALT, {\n    type: 'line',\n    data: {\n        datasets: [{\n            label: 'Altitude',\n            data: [0,1],\n            backgroundColor: [\n                'rgba(19, 19, 19, 0.1)'\n            ],\n            borderColor: [\n                'rgba(70,102,255, 1)'\n            ],\n            borderWidth: 2\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n    //GRAFICI -----------------\\\\\\\\\\\nvar count_mac = 0;\nvar count_round = 0;\nvar count_heart = 0;\nvar count_alt = 0;\nvar text;\nvar text_sound;\n(function(scope) {\n\ttext = document.getElementById(\"counterMachine\");\n\ttext_sound = document.getElementById(\"soundText\");\n        scope.$watch('msg', function(msg, data) {\n            var t = msg.timestamp;\n            var time = t.substring(11,13);\n            var minutes = t.substring(15,17);\n            switch(msg.topic){\n                case \"roundPerMinute\":\n                    roundPerMinuteRoutine(time,msg.sensor_value);\n                    break;\n                case \"piecesCount\":\n                \tpiecesCountRoutine(msg.sensor_value);\n                \tbreak;\n                case \"machineTemperature\":\n                \tmachineTempRoutine(time,msg.sensor_value);\n                \tbreak;\n                case \"Altitude\":\n                    altitudeRoutine(time,msg.sensor_value);\n                    break;\n                case \"heartBeat\":\n                    heartRoutine(time,msg.sensor_value);\n                \tbreak;\n                case \"Sound\":\n                    soundRoutine(msg.sensor_value);\n                \tbreak;\n            }\n        })\n    })(scope);\n    \nfunction addData(chart, label, dat, index) {\n    chart.data.labels.push(label);\n    if (count_mac > 10 || count_round > 10){\n        removeData(chart);\n    }\n    chart.data.datasets.forEach((dataset) => {\n        dataset.data.push(dat);\n    });\n    chart.update();\n}\n\nfunction removeData(chart){\n    chart.data.labels.shift();\n    chart.data.datasets.forEach((dataset) => {\n        dataset.data.shift();\n        });\n    chart.update();\n}\n\nfunction removeSingleData(chart) {\n    chart.data.labels.shift();\n    chart.update();\n}\n\nfunction piecesCountRoutine(value){\n    var val = value;\n    text.innerHTML = val;\n}\n\nfunction roundPerMinuteRoutine(times, value){\n\taddData(myChart,times,value, count_round++);\n}\n\nfunction machineTempRoutine(times, value){\n    addData(myChart_2,times,value,count_mac++);\n}\n\nfunction heartRoutine(times, value){\n    addData(myChart_HEART,times,value,count_mac++);\n}\n\nfunction altitudeRoutine(times, value){\n\taddData(myChart_ALT,times,value, count_round++);\n}\nfunction soundRoutine(value){\n    var val = value;\n    text_sound.innerHTML = val;\n}\n\n\n\n    </script>\n","storeOutMessages":false,"fwdInMessages":true,"templateScope":"local","x":1430,"y":100,"wires":[[]]},{"id":"28c8e2b8.dc62de","type":"ui_template","z":"146f999b.f0f316","group":"af5ea5d4.d1cf98","name":"","order":5,"width":"18","height":"3","format":"<style>\n    #container_log{\n        width: 100%;\n        height: 100%;\n        position:relative;\n    }\n    .row{\n        float:left;\n        width:50%;\n        display: inherit;\n    }\n</style>\n\n<div id=\"container_log\" style=\"width: 100%;\">\n    <table id =\"tab_log_notif\">\n        <tr id=\"row_0\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_1\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_2\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_3\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_4\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_5\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_6\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_7\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_8\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_9\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_10\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_11\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_12\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n        <tr id=\"row_13\" class=\"row\">\n            <td class=\"priority\"></td>\n            <td class=\"type\"></td>\n            <td class=\"value\"></td>\n            <td class=\"delete\"></td>\n        </tr>\n    </table>\n</div>\n\n<script>\nvar row_index;\n\n(function(scopeX) {\n        scopeX.$watch('msg', function(msg) {\n            console.log(\"okkkkkkkkkkkk\");\n            console.log(msg.notif_info[0].notify_value);\n            populateLoggingTable(msg.notif_info,row_index);\n        })\n    });\n    \n\n</script>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":1420,"y":260,"wires":[["faf2ee41.8b529"]]},{"id":"e5240838.ace318","type":"debug","z":"146f999b.f0f316","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":630,"y":200,"wires":[]},{"id":"8a8f8cb6.6728","type":"change","z":"146f999b.f0f316","name":"","rules":[{"t":"set","p":"sensor_value","pt":"msg","to":"","tot":"str"},{"t":"set","p":"topic","pt":"msg","to":"","tot":"str"},{"t":"set","p":"notify_type","pt":"msg","to":"","tot":"str"},{"t":"set","p":"notify_value","pt":"msg","to":"","tot":"str"},{"t":"set","p":"notify_priority","pt":"msg","to":"","tot":"str"},{"t":"set","p":"notify_role","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":640,"y":260,"wires":[["3553b494.429a6c"]]},{"id":"73a33a5f.a212b4","type":"ui_template","z":"146f999b.f0f316","d":true,"group":"fd9b973c.ccb218","name":"gauge_decibel","order":1,"width":"6","height":"6","format":"<div id=\"svgcontainer\">\n\t<svg height=\"300\" width=\"300\" id=\"svg\">\n\t\t<circle id=\"progressbg\" cx=\"150\" cy=\"150\" r=\"120\" stroke-width=\"29\" fill=\"transparent\" stroke-dasharray=\"753.9822368615503\" />\n\t\t<circle id=\"progress\" cx=\"150\" cy=\"150\" r=\"120\" stroke-width=\"30\" fill=\"transparent\" stroke-dasharray=\"753.9822368615503\" />\n\t</svg>\n\t<div id=\"value\"></div>\n</div>\n\n<script>\nvar yb = document.getElementById(\"value\");\nvar progress = document.getElementById(\"progress\");\n\n//setProgress();\n\nvar valore_in;\n(function(scopeS) {\n    // watch msg object from Node-RED\n    scopeS.$watch('msg.payload', function(data) {\n            var int_d = Math.floor(parseInt(data, 10));\n            console.log(\"asdadsds \"+ Number(int_d));\n            setProgress(int_d);\n            showSliderValue(Number(int_d));\n        });\n})(scope);\n\nfunction showSliderValue(input){\n    yb.innerHTML = input+\"dB\";\n}\nfunction setProgress(input){\n    var valore_random= input;\n\tvar radius = progress.getAttribute(\"r\");\n\tvar circumference = 2 * Math.PI * radius;\n\n\t//var progress_in_percent = yb.id('slider').value;\n    var progress_in_percent = valore_random;\n\tvar progress_in_pixels = circumference * (100-progress_in_percent)/100;\n\tprogress.style.strokeDashoffset = progress_in_pixels+'px';\n\n\tif(valore_random < 25){\n\t\tprogress.style.stroke = 'red';\n\t\tyb.style.color = 'red';\n\t}\n\telse if(valore_random >= 75){\n\t\tprogress.style.stroke = '#7df';\n\t\tyb.style.color = '#7df';\n\t}\n\telse{\n\t\tprogress.style.stroke = 'gold';\n\t\tyb.style.color = 'gold';\n\t}\n}\n\n</script>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":2100,"y":260,"wires":[[]]},{"id":"ce070636.abe568","type":"switch","z":"146f999b.f0f316","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"sound","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1920,"y":260,"wires":[["73a33a5f.a212b4"]]},{"id":"71eeeca5.cac1c4","type":"ui_template","z":"146f999b.f0f316","d":true,"group":"e46d09d5.e7ebd8","name":"flusso_video","order":0,"width":"12","height":"7","format":"<iframe width=\"100%\" height=\"100%\" src=\"https://youtu.be/embed/G1lbRujko-A\">\n</iframe>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":2070,"y":340,"wires":[[]]},{"id":"4beecbe9.3ab1f4","type":"comment","z":"146f999b.f0f316","name":"","info":"I grafici vanno gestiti nel file big perchè sennò bisogna mettere listener di msg doppi.\n\nPer i segnali non in real time è possibile splittare dal file big","x":1660,"y":220,"wires":[]},{"id":"6e1a019e.fabe2","type":"switch","z":"146f999b.f0f316","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"barometer","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1870,"y":140,"wires":[[]]},{"id":"c80a9c63.8f6be","type":"ui_template","z":"146f999b.f0f316","d":true,"group":"430bdf3b.821cc","name":"Mappa","order":0,"width":"12","height":"7","format":"    <style>\n      #map {position: absolute; top: 0; right: 0; bottom: 0; left: 0;}\n    </style>\n    <div id=\"map\"></div><p><a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">© MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">© OpenStreetMap contributors</a></p>\n    <script>\n    /*\n    var key = '58vA8P4IZAl6z9EyXxMt';\n    var map = new ol.Map({\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.TileJSON({\n            url: 'https://api.maptiler.com/maps/1462fcad-0433-489f-8da7-95a4543f5271/style.json?key=' + key,\n            tileSize: 512,\n            crossOrigin: 'anonymous'\n          })\n        })\n      ],\n      target: 'map',\n      view: new ol.View({\n        constrainResolution: true,\n        center: ol.proj.fromLonLat([12.24476, 45.48295]),\n        zoom: 15\n      })\n    });\n    */\nvar styleJson = 'https://api.maptiler.com/maps/1462fcad-0433-489f-8da7-95a4543f5271/style.json?key=58vA8P4IZAl6z9EyXxMt';\nvar map = new ol.Map({\n    target: 'map',\n    view: new ol.View({\n      constrainResolution: true,\n      center: ol.proj.fromLonLat([12.53123, 45.46758]),\n      zoom: 19\n    })\n  });\nolms.apply(map, styleJson);\nsetTimeout(function () {\n    map.updateSize();\n}, 200);\n    </script>","storeOutMessages":false,"fwdInMessages":true,"templateScope":"local","x":1410,"y":320,"wires":[[]]},{"id":"400b0766.7e5968","type":"debug","z":"146f999b.f0f316","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1050,"y":360,"wires":[]},{"id":"6baa5a1c.6fd8c4","type":"ui_toast","z":"146f999b.f0f316","d":true,"position":"top right","displayTime":"10000","highlight":"","sendall":true,"outputs":0,"ok":"OK","cancel":"","raw":true,"topic":"","name":"","x":1980,"y":440,"wires":[]},{"id":"f9d283dd.ce36e","type":"websocket in","z":"146f999b.f0f316","name":"","server":"a11257bf.b197d8","client":"","x":160,"y":460,"wires":[["9a776e1b.61326"]]},{"id":"9ef2bde3.34ba5","type":"websocket in","z":"146f999b.f0f316","name":"","server":"dcad5eab.82528","client":"","x":160,"y":580,"wires":[[]]},{"id":"b50665fd.209eb8","type":"websocket in","z":"146f999b.f0f316","name":"","server":"456e1214.09c27c","client":"","x":160,"y":640,"wires":[[]]},{"id":"b6d9eacf.be46f8","type":"template","z":"146f999b.f0f316","name":"Dropdown css","field":"style_dropdown","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"/* Dropdown Button */\n.dropbtn {\n  background-color: #3498DB;\n  color: white;\n  padding: 16px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n}\n\n/* Dropdown button on hover & focus */\n.dropbtn:hover, .dropbtn:focus {\n  background-color: #2980B9;\n}\n\n/* The container <div> - needed to position the dropdown content */\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #f1f1f1;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  z-index: 1;\n}\n\n/* Links inside the dropdown */\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n/* Change color of dropdown links on hover */\n.dropdown-content a:hover {background-color: #ddd}\n\n/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */\n.show {display:block;}","output":"str","x":1040,"y":140,"wires":[["e69f13d4.ed23c"]]},{"id":"21647a8c.c6f866","type":"debug","z":"146f999b.f0f316","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":490,"y":140,"wires":[]},{"id":"9bfa590f.d22ca8","type":"websocket in","z":"146f999b.f0f316","name":"","server":"89c545a9.aa7a68","client":"","x":150,"y":700,"wires":[[]]},{"id":"63b8b214.edea9c","type":"websocket in","z":"146f999b.f0f316","name":"","server":"3f5d0715.62b8a8","client":"","x":180,"y":760,"wires":[[]]},{"id":"3c7c4668.b7d8ca","type":"ui_group","z":"","name":"TAB_1","tab":"cead6a2a.be9128","disp":true,"width":"10","collapse":false},{"id":"50dca986.3dcf68","type":"websocket-listener","z":"","path":"/v1/dataPack/machine","wholemsg":"false"},{"id":"7179332e.2c6aec","type":"ui_group","z":"","name":"[DashBoard] Machine","tab":"cdb81a21.897258","order":4,"disp":true,"width":"9","collapse":false},{"id":"bd602647.ead248","type":"websocket-listener","z":"","path":"/v1/dataPack/smartwatch","wholemsg":"false"},{"id":"fb5d3b0e.b7c228","type":"websocket-listener","z":"","path":"/v1/dataPack/fieldSensors","wholemsg":"false"},{"id":"af5ea5d4.d1cf98","type":"ui_group","z":"","name":"[Dashboard] Logging_notifies","tab":"cdb81a21.897258","order":6,"disp":true,"width":"18","collapse":false},{"id":"fd9b973c.ccb218","type":"ui_group","z":"","name":"Smartwatch","tab":"cdb81a21.897258","order":1,"disp":true,"width":"9","collapse":false},{"id":"e46d09d5.e7ebd8","type":"ui_group","z":"","name":"[DashBoard] Streaming Video","tab":"cdb81a21.897258","order":7,"disp":true,"width":"12","collapse":false},{"id":"430bdf3b.821cc","type":"ui_group","z":"","name":"[DashBoard] Mappa","tab":"cdb81a21.897258","order":8,"disp":true,"width":"12","collapse":false},{"id":"a11257bf.b197d8","type":"websocket-listener","z":"","path":"/v1/realTime/notifications","wholemsg":"false"},{"id":"dcad5eab.82528","type":"websocket-listener","z":"","path":"/v1/realTime/smartwatch","wholemsg":"false"},{"id":"456e1214.09c27c","type":"websocket-listener","z":"","path":"/v1/realTime/fieldSensors","wholemsg":"false"},{"id":"89c545a9.aa7a68","type":"websocket-listener","z":"","path":"/v1/realTime/machine","wholemsg":"false"},{"id":"3f5d0715.62b8a8","type":"websocket-listener","z":"","path":"v1/realTime/integrationPlatform","wholemsg":"false"},{"id":"cead6a2a.be9128","type":"ui_tab","z":"","name":"Home","icon":"dashboard","disabled":true,"hidden":true},{"id":"cdb81a21.897258","type":"ui_tab","z":"","name":"Dashboard","icon":"dashboard","disabled":false,"hidden":false}]